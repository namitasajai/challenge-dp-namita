[{"/Users/namitasajai/Documents/challenge-dp-namita/src/index.js":"1","/Users/namitasajai/Documents/challenge-dp-namita/src/App.js":"2","/Users/namitasajai/Documents/challenge-dp-namita/src/states/store.ts":"3","/Users/namitasajai/Documents/challenge-dp-namita/src/states/questionSlice.ts":"4","/Users/namitasajai/Documents/challenge-dp-namita/src/components/QuestionCard.js":"5"},{"size":383,"mtime":1675648363975,"results":"6","hashOfConfig":"7"},{"size":1599,"mtime":1675702603538,"results":"8","hashOfConfig":"7"},{"size":256,"mtime":1675659689885,"results":"9","hashOfConfig":"7"},{"size":503,"mtime":1675662131274,"results":"10","hashOfConfig":"7"},{"size":1095,"mtime":1675662387733,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1d47gv9",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"15"},"/Users/namitasajai/Documents/challenge-dp-namita/src/index.js",[],[],[],"/Users/namitasajai/Documents/challenge-dp-namita/src/App.js",["30","31","32","33","34"],[],"/Users/namitasajai/Documents/challenge-dp-namita/src/states/store.ts",[],[],[],"/Users/namitasajai/Documents/challenge-dp-namita/src/states/questionSlice.ts",[],[],"/Users/namitasajai/Documents/challenge-dp-namita/src/components/QuestionCard.js",["35","36"],[],"import React from 'react';\nimport { RootState } from '../states/store.ts';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAnswer } from '../states/questionSlice.ts'; \n\nconst QuestionCard = (props) => {\n    const answerChoices = props.answerChoices;\n    const dispatch = useDispatch(); \n    const currentChoice = useSelector((state) => state.question.totalChoices[props.title]);\n\n    const Click = (k) => {\n        dispatch(setAnswer({prompt: props.title, choice: k})); \n        console.log(currentChoice);\n    }\n\n    useEffect(() => {\n\n    }, [currentChoice])\n\n    return (\n        <li className=\"question-card\">\n            <div id=\"prompt\"><b>{props.title}</b></div>\n            <ul>\n                {Object.entries(answerChoices).map(([key, value]) => (\n                    <li class={(key === currentChoice)? \"choice-selected\" : \"choice\"} key={key} onClick={() => Click(key)}>\n                        {value}\n                    </li>\n                ))}\n            </ul>\n        </li>\n    );\n}\n\nexport default QuestionCard;",{"ruleId":"37","severity":1,"message":"38","line":8,"column":10,"nodeType":"39","messageId":"40","endLine":8,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":9,"column":10,"nodeType":"39","messageId":"40","endLine":9,"endColumn":18},{"ruleId":"37","severity":1,"message":"42","line":9,"column":20,"nodeType":"39","messageId":"40","endLine":9,"endColumn":31},{"ruleId":"37","severity":1,"message":"43","line":10,"column":10,"nodeType":"39","messageId":"40","endLine":10,"endColumn":24},{"ruleId":"37","severity":1,"message":"44","line":10,"column":26,"nodeType":"39","messageId":"40","endLine":10,"endColumn":43},{"ruleId":"37","severity":1,"message":"45","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":19},{"ruleId":"37","severity":1,"message":"46","line":3,"column":21,"nodeType":"39","messageId":"40","endLine":3,"endColumn":29},"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","'answered' is assigned a value but never used.","'setAnswered' is assigned a value but never used.","'displayResults' is assigned a value but never used.","'setDisplayResults' is assigned a value but never used.","'RootState' is defined but never used.","'useState' is defined but never used."]