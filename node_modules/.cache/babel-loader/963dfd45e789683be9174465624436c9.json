{"ast":null,"code":"var _jsxFileName = \"/Users/namitasajai/Documents/challenge-dp-namita/src/components/Results.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clear } from '../states/questionSlice.ts';\nimport { Link } from 'react-router-dom';\nimport Typewriter from 'typewriter-effect';\nimport Data from '../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const choices = useSelector(state => state.question.totalChoices); // Counting the choices\n\n  const choiceCounts = {};\n\n  for (const prompt in choices) {\n    let chosen = choices[prompt];\n\n    if (!(chosen in choiceCounts)) {\n      choiceCounts[chosen] = 1;\n    } else {\n      choiceCounts[chosen] += 1;\n    }\n  } // Most Chosen:\n\n\n  const mostFrequent = Object.keys(choiceCounts).reduce((a, b) => choiceCounts[a] > choiceCounts[b] ? a : b); // Assuming that all answer choices are letters, finding the index of what that letter is\n\n  const index = mostFrequent.toUpperCase().charCodeAt(0) - 65;\n  const resultText = Data.results[index];\n\n  const onClick = () => {\n    dispatch(clear({\n      choices\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: /*#__PURE__*/_jsxDEV(Typewriter, {\n        options: {\n          strings: ['Congratulations!', 'Your Results Are In!'],\n          autoStart: true,\n          loop: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"questions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"question-card\",\n        style: {\n          padding: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", resultText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          onClick: onClick,\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choice\",\n            id: \"retakeBtnDiv\",\n            style: {\n              marginTop: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              id: \"retakeBtn\",\n              children: \"Retake quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Results, \"ijRVKbj+YOzAt94cnztFTXqc1XY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useDispatch","useSelector","clear","Link","Typewriter","Data","Results","props","dispatch","choices","state","question","totalChoices","choiceCounts","prompt","chosen","mostFrequent","Object","keys","reduce","a","b","index","toUpperCase","charCodeAt","resultText","results","onClick","strings","autoStart","loop","padding","textDecoration","marginTop"],"sources":["/Users/namitasajai/Documents/challenge-dp-namita/src/components/Results.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clear } from '../states/questionSlice.ts';\nimport { Link } from 'react-router-dom';\nimport Typewriter from 'typewriter-effect'\nimport Data from '../data.json';\n\n\nconst Results = (props) => {\n    const dispatch = useDispatch();\n    const choices = useSelector((state) => state.question.totalChoices);\n\n    // Counting the choices\n    const choiceCounts = {}\n\n    for (const prompt in choices) {\n        let chosen = choices[prompt]\n        if (!(chosen in choiceCounts)) {\n            choiceCounts[chosen] = 1;\n        } else {\n            choiceCounts[chosen] += 1;\n        }\n    }\n\n    // Most Chosen:\n    const mostFrequent = Object.keys(choiceCounts).reduce((a, b) => choiceCounts[a] > choiceCounts[b] ? a : b);\n\n    // Assuming that all answer choices are letters, finding the index of what that letter is\n    const index = mostFrequent.toUpperCase().charCodeAt(0) - 65;\n\n    const resultText = Data.results[index]\n    const onClick = () => {\n        dispatch(clear({ choices }));\n    }\n\n    return (\n        <div className=\"App\">\n            {/* 1. Header */}\n            <h1 id=\"title\"><Typewriter\n                options={{\n                    strings: ['Congratulations!', 'Your Results Are In!'],\n                    autoStart: true,\n                    loop: true,\n                }}\n            />\n            </h1>\n            <div class=\"questions\">\n                <div class=\"question-card\" style={{ padding: '30px' }}>\n                    <div> {resultText} </div>\n                    <Link to=\"/\" onClick={onClick} style={{ textDecoration: 'none' }} >\n                        <div className=\"choice\" id=\"retakeBtnDiv\" style={{ marginTop: '20px' }}>\n                            <b id=\"retakeBtn\">Retake quiz</b>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACvB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,YAA3B,CAA3B,CAFuB,CAIvB;;EACA,MAAMC,YAAY,GAAG,EAArB;;EAEA,KAAK,MAAMC,MAAX,IAAqBL,OAArB,EAA8B;IAC1B,IAAIM,MAAM,GAAGN,OAAO,CAACK,MAAD,CAApB;;IACA,IAAI,EAAEC,MAAM,IAAIF,YAAZ,CAAJ,EAA+B;MAC3BA,YAAY,CAACE,MAAD,CAAZ,GAAuB,CAAvB;IACH,CAFD,MAEO;MACHF,YAAY,CAACE,MAAD,CAAZ,IAAwB,CAAxB;IACH;EACJ,CAdsB,CAgBvB;;;EACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,MAA1B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KAAUR,YAAY,CAACO,CAAD,CAAZ,GAAkBP,YAAY,CAACQ,CAAD,CAA9B,GAAoCD,CAApC,GAAwCC,CAAnF,CAArB,CAjBuB,CAmBvB;;EACA,MAAMC,KAAK,GAAGN,YAAY,CAACO,WAAb,GAA2BC,UAA3B,CAAsC,CAAtC,IAA2C,EAAzD;EAEA,MAAMC,UAAU,GAAGpB,IAAI,CAACqB,OAAL,CAAaJ,KAAb,CAAnB;;EACA,MAAMK,OAAO,GAAG,MAAM;IAClBnB,QAAQ,CAACN,KAAK,CAAC;MAAEO;IAAF,CAAD,CAAN,CAAR;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEI;MAAI,EAAE,EAAC,OAAP;MAAA,uBAAe,QAAC,UAAD;QACX,OAAO,EAAE;UACLmB,OAAO,EAAE,CAAC,kBAAD,EAAqB,sBAArB,CADJ;UAELC,SAAS,EAAE,IAFN;UAGLC,IAAI,EAAE;QAHD;MADE;QAAA;QAAA;QAAA;MAAA;IAAf;MAAA;MAAA;MAAA;IAAA,QAFJ,eAUI;MAAK,KAAK,EAAC,WAAX;MAAA,uBACI;QAAK,KAAK,EAAC,eAAX;QAA2B,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAX,CAAlC;QAAA,wBACI;UAAA,gBAAON,UAAP;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD;UAAM,EAAE,EAAC,GAAT;UAAa,OAAO,EAAEE,OAAtB;UAA+B,KAAK,EAAE;YAAEK,cAAc,EAAE;UAAlB,CAAtC;UAAA,uBACI;YAAK,SAAS,EAAC,QAAf;YAAwB,EAAE,EAAC,cAA3B;YAA0C,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAb,CAAjD;YAAA,uBACI;cAAG,EAAE,EAAC,WAAN;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CAlDD;;GAAM3B,O;UACeN,W,EACDC,W;;;KAFdK,O;AAoDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}